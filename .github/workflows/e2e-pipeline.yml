name: e2e pipeline
run-name: Build, Deploy, Test - from user @${{ github.actor }}

on: 
  workflow_dispatch:

jobs: 
  build:  
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Run Unit Tests with JaCoCo
        run: mvn test jacoco:report
  
      - name: Verify code coverage
        run: mvn jacoco:check
        env:
            JACOCO_COVERAGE: 0.8 # 80% coverage  deploy-to-prod:
    needs: [analyze]
    runs-on: ubuntu-latest
    environment: Production

    steps: 
      - name: Check server status
        run: |
          SERVER_IP=${{ secrets.SERVER_IP }}
          echo "Pinging $SERVER_IP..."
          ping -c 4 $SERVER_IP
          echo "Server is up and running."

      - name: "cleanup destination at ${{ vars.PROD_IP }}"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.PROD_IP }}
          port: ${{ vars.PROD_PORT }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: cp -f /home/ec2-user/deployment/deploy/digibank.war ${{ vars.PROD_TOMCAT }}
          
      - name: Sleep for 10 seconds
        run: sleep 10s
        shell: bash
  
      - name: Build with Maven
        run: mvn -DskipTests -B package --no-transfer-progress --file ./pom.xml

      - name: rename Artefakt
        run: mv ./target/*digitalbank*.war ./target/digibank.war

      - uses: actions/upload-artifact@master
        with:
          name: digibank.war
          path: ./target/digibank*
    
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript', 'java' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"
        
  cleanup:
    needs: [build]
    runs-on: ubuntu-latest
    environment: UAT

    steps: 
      - name: "cleanup destination at ${{ vars.UAT_IP }}"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.UAT_IP }}
          port: ${{ vars.UAT_PORT }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            rm -rf ./deployment/*
            rm -rf ${{ vars.UAT_TOMCAT }}/digi*
            
  deploy: 
    needs: [cleanup]
    runs-on: ubuntu-latest
    environment: UAT
    
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: digibank.war
          path: ./deploy
          
      - run: ls -ltr ./deploy
          
      - name: deploy
        uses: appleboy/scp-action@master
        with:
          host: ${{ vars.UAT_IP }}
          port: ${{ vars.UAT_PORT }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          source: './deploy/digibank.war'
          target: 'deployment'
          
  install:
    needs: [deploy]
    runs-on: ubuntu-latest
    environment: UAT

    steps: 
      - name: "cleanup destination at ${{ vars.UAT_IP }}"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.UAT_IP }}
          port: ${{ vars.UAT_PORT }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: cp -f /home/ec2-user/deployment/deploy/digibank.war ${{ vars.UAT_TOMCAT }}
          
      - name: Sleep for 10 seconds
        run: sleep 10s
        shell: bash
        
  e2e-tests:
    needs: [install]
    runs-on: ubuntu-latest
    environment: UAT
    name: Trigger E2E Tests on UAT Environment

    steps:
      - name: Trigger Workflow from e2e tests with Playwright
        run: |
          curl -X POST \
          -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/tau-github-actions-for-testing/tau-digital-bank-e2e-tests/dispatches \
          -d  '{"event_type": "trigger-tests", "client_payload" : { "sut" : "${{ vars.UAT_IP }}" } }'

  deploy-to-prod:
    needs: [e2e-tests]
    runs-on: ubuntu-latest
    environment: Production

      name: Check server status
        run: |
          SERVER_IP=${{ secrets.SERVER_IP }}
          echo "Pinging $SERVER_IP..."
          ping -c 4 $SERVER_IP
          echo "Server is up and running."

    steps: 
      - name: "cleanup destination at ${{ vars.PROD_IP }}"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.PROD_IP }}
          port: ${{ vars.PROD_PORT }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
        script: cp -f /home/ec2-user/deployment/deploy/digibank.war ${{ vars.PROD_TOMCAT }}
        
